CCS PCH C Compiler, Version 5.007, 61971               12-jan-20 08:51

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Micro\Programas oficiais\Apostila Micro\P95\P95.lst

               ROM used:   992 bytes (3%)
                           Largest free fragment is 31776
               RAM used:   28 (1%) at main() level
                           49 (2%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   025E
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
0004:  DATA 0D,0A
0006:  DATA 45,6E
0008:  DATA 76,69
000A:  DATA 65,20
000C:  DATA 75,6D
000E:  DATA 20,76
0010:  DATA 61,6C
0012:  DATA 6F,72
0014:  DATA 20,65
0016:  DATA 6E,74
0018:  DATA 72,65
001A:  DATA 20,30
001C:  DATA 30,30
001E:  DATA 20,65
0020:  DATA 20,31
0022:  DATA 30,30
0024:  DATA 3A,28
0026:  DATA 33,20
0028:  DATA 61,6C
002A:  DATA 67,61
002C:  DATA 72,69
002E:  DATA 73,6D
0030:  DATA 6F,73
0032:  DATA 29,0D
0034:  DATA 0A,00
0036:  DATA 0D,0A
0038:  DATA 6E,75
003A:  DATA 6D,65
003C:  DATA 72,6F
003E:  DATA 3D,25
0040:  DATA 6C,75
0042:  DATA 0D,0A
0044:  DATA 00,00
0046:  DATA 0D,0A
0048:  DATA 56,61
004A:  DATA 6C,6F
004C:  DATA 72,20
004E:  DATA 69,6E
0050:  DATA 63,6F
0052:  DATA 72,72
0054:  DATA 65,74
0056:  DATA 6F,21
0058:  DATA 21,0D
005A:  DATA 0A,00
005C:  DATA 0D,0A
005E:  DATA 56,61
0060:  DATA 6C,6F
0062:  DATA 72,20
0064:  DATA 6F,6B
0066:  DATA 0D,0A
0068:  DATA 00,00
*
0090:  TBLRD*+
0092:  MOVF   FF5,F
0094:  BZ    00B0
0096:  MOVFF  FF6,18
009A:  MOVFF  FF7,19
009E:  MOVF   FF5,W
00A0:  BTFSS  F9E.4
00A2:  BRA    00A0
00A4:  MOVWF  FAD
00A6:  MOVFF  18,FF6
00AA:  MOVFF  19,FF7
00AE:  BRA    0090
00B0:  RETURN 0
00B2:  CLRF   24
00B4:  CLRF   25
00B6:  MOVLW  01
00B8:  MOVWF  26
00BA:  CLRF   FDA
00BC:  CLRF   FD9
00BE:  CLRF   29
00C0:  MOVLW  1C
00C2:  MOVWF  28
00C4:  CLRF   FEA
00C6:  MOVLW  20
00C8:  MOVWF  FE9
00CA:  MOVFF  29,FE2
00CE:  MOVFF  28,FE1
00D2:  MOVFF  26,27
00D6:  BCF    FD8.0
00D8:  MOVF   FE5,W
00DA:  MULWF  FEE
00DC:  MOVF   FF3,W
00DE:  ADDWFC 24,F
00E0:  MOVF   FF4,W
00E2:  ADDWFC 25,F
00E4:  DECFSZ 27,F
00E6:  BRA    00D6
00E8:  MOVFF  24,FDE
00EC:  MOVFF  25,24
00F0:  CLRF   25
00F2:  BTFSC  FD8.0
00F4:  INCF   25,F
00F6:  INCF   28,F
00F8:  BTFSC  FD8.2
00FA:  INCF   29,F
00FC:  INCF   26,F
00FE:  MOVF   26,W
0100:  SUBLW  05
0102:  BNZ   00C4
0104:  RETURN 0
0106:  TBLRD*+
0108:  MOVFF  FF6,19
010C:  MOVFF  FF7,1A
0110:  MOVF   FF5,W
0112:  BTFSS  F9E.4
0114:  BRA    0112
0116:  MOVWF  FAD
0118:  MOVFF  19,FF6
011C:  MOVFF  1A,FF7
0120:  DECFSZ 18,F
0122:  BRA    0106
0124:  GOTO   034E (RETURN)
0128:  BTFSC  FD8.1
012A:  BRA    0132
012C:  CLRF   FEA
012E:  MOVLW  2C
0130:  MOVWF  FE9
0132:  CLRF   00
0134:  CLRF   01
0136:  CLRF   02
0138:  CLRF   03
013A:  CLRF   2C
013C:  CLRF   2D
013E:  CLRF   2E
0140:  CLRF   2F
0142:  MOVF   2B,W
0144:  IORWF  2A,W
0146:  IORWF  29,W
0148:  IORWF  28,W
014A:  BZ    01A4
014C:  MOVLW  20
014E:  MOVWF  30
0150:  BCF    FD8.0
0152:  RLCF   24,F
0154:  RLCF   25,F
0156:  RLCF   26,F
0158:  RLCF   27,F
015A:  RLCF   2C,F
015C:  RLCF   2D,F
015E:  RLCF   2E,F
0160:  RLCF   2F,F
0162:  MOVF   2B,W
0164:  SUBWF  2F,W
0166:  BNZ   0178
0168:  MOVF   2A,W
016A:  SUBWF  2E,W
016C:  BNZ   0178
016E:  MOVF   29,W
0170:  SUBWF  2D,W
0172:  BNZ   0178
0174:  MOVF   28,W
0176:  SUBWF  2C,W
0178:  BNC   0198
017A:  MOVF   28,W
017C:  SUBWF  2C,F
017E:  MOVF   29,W
0180:  BTFSS  FD8.0
0182:  INCFSZ 29,W
0184:  SUBWF  2D,F
0186:  MOVF   2A,W
0188:  BTFSS  FD8.0
018A:  INCFSZ 2A,W
018C:  SUBWF  2E,F
018E:  MOVF   2B,W
0190:  BTFSS  FD8.0
0192:  INCFSZ 2B,W
0194:  SUBWF  2F,F
0196:  BSF    FD8.0
0198:  RLCF   00,F
019A:  RLCF   01,F
019C:  RLCF   02,F
019E:  RLCF   03,F
01A0:  DECFSZ 30,F
01A2:  BRA    0150
01A4:  MOVFF  2C,FEF
01A8:  MOVFF  2D,FEC
01AC:  MOVFF  2E,FEC
01B0:  MOVFF  2F,FEC
01B4:  RETURN 0
01B6:  MOVF   FE9,W
01B8:  MOVWF  1C
01BA:  MOVLW  3B
01BC:  MOVWF  23
01BE:  MOVLW  9A
01C0:  MOVWF  22
01C2:  MOVLW  CA
01C4:  MOVWF  21
01C6:  CLRF   20
01C8:  MOVLW  0A
01CA:  MOVWF  1E
01CC:  BSF    FD8.1
01CE:  CLRF   FEA
01D0:  MOVLW  18
01D2:  MOVWF  FE9
01D4:  MOVFF  1B,27
01D8:  MOVFF  1A,26
01DC:  MOVFF  19,25
01E0:  MOVFF  18,24
01E4:  MOVFF  23,2B
01E8:  MOVFF  22,2A
01EC:  MOVFF  21,29
01F0:  MOVFF  20,28
01F4:  RCALL  0128
01F6:  MOVF   01,W
01F8:  MOVF   00,F
01FA:  BNZ   021A
01FC:  MOVF   1E,W
01FE:  XORLW  01
0200:  BZ    021A
0202:  MOVF   1C,W
0204:  BZ    021C
0206:  ANDLW  0F
0208:  SUBWF  1E,W
020A:  BZ    020E
020C:  BC    0228
020E:  BTFSC  1C.7
0210:  BRA    0228
0212:  BTFSC  1C.6
0214:  BRA    021C
0216:  MOVLW  20
0218:  BRA    021E
021A:  CLRF   1C
021C:  MOVLW  30
021E:  ADDWF  00,F
0220:  MOVF   00,W
0222:  BTFSS  F9E.4
0224:  BRA    0222
0226:  MOVWF  FAD
0228:  BCF    FD8.1
022A:  MOVFF  23,27
022E:  MOVFF  22,26
0232:  MOVFF  21,25
0236:  MOVFF  20,24
023A:  CLRF   2B
023C:  CLRF   2A
023E:  CLRF   29
0240:  MOVLW  0A
0242:  MOVWF  28
0244:  RCALL  0128
0246:  MOVFF  03,23
024A:  MOVFF  02,22
024E:  MOVFF  01,21
0252:  MOVFF  00,20
0256:  DECFSZ 1E,F
0258:  BRA    01CC
025A:  GOTO   0364 (RETURN)
....................  
.................... #list 
....................  
.................... #fuses HS, CPUDIV1 ,PLL5 ,USBDIV 
.................... #use delay (clock=20000000) 
*
006A:  CLRF   FEA
006C:  MOVLW  18
006E:  MOVWF  FE9
0070:  MOVF   FEF,W
0072:  BZ    008E
0074:  MOVLW  06
0076:  MOVWF  01
0078:  CLRF   00
007A:  DECFSZ 00,F
007C:  BRA    007A
007E:  DECFSZ 01,F
0080:  BRA    0078
0082:  MOVLW  7B
0084:  MOVWF  00
0086:  DECFSZ 00,F
0088:  BRA    0086
008A:  DECFSZ FEF,F
008C:  BRA    0074
008E:  RETURN 0
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7) 
.................... //#use standard_io(B) //comentar linha caso a biblioteca do LCD seja diferente 
.................... //#define use_portB_lcd TRUE //comentar linha caso a biblioteca do LCD seja diferente 
.................... //#define LCD_TYPE 2 
.................... //#include <LCD.c> 
.................... int32 u,d,c,null; 
.................... unsigned int32 selection; 
.................... void main() 
*
025E:  CLRF   FF8
0260:  BCF    FD0.7
0262:  BSF    FB8.3
0264:  MOVLW  08
0266:  MOVWF  FAF
0268:  MOVLW  02
026A:  MOVWF  FB0
026C:  MOVLW  A6
026E:  MOVWF  FAC
0270:  MOVLW  90
0272:  MOVWF  FAB
0274:  MOVF   FC1,W
0276:  ANDLW  C0
0278:  IORLW  0F
027A:  MOVWF  FC1
027C:  MOVLW  07
027E:  MOVWF  FB4
.................... { 
.................... //lcd_init(); 
.................... while(1){ 
.................... //lcd_gotoxy(1,1); 
.................... //printf(lcd_putc," Envio de valor "); 
.................... //lcd_gotoxy(1,2); 
.................... //printf(lcd_putc," pela serial "); 
.................... delay_ms(200); 
0280:  MOVLW  C8
0282:  MOVWF  18
0284:  RCALL  006A
.................... do 
.................... { 
.................... printf("\r\nEnvie um valor entre 000 e 100:(3 algarismos)\r\n"); 
0286:  MOVLW  04
0288:  MOVWF  FF6
028A:  MOVLW  00
028C:  MOVWF  FF7
028E:  RCALL  0090
.................... c=getc()-48; //48 corresponde ao valor do caractere 0 da tabela ASCII. 
0290:  BTFSS  F9E.5
0292:  BRA    0290
0294:  MOVF   FAE,W
0296:  ADDLW  D0
0298:  MOVWF  0C
029A:  CLRF   0D
029C:  CLRF   0E
029E:  CLRF   0F
.................... d=getc()-48;//48 corresponde ao valor do caractere 0 da tabela ASCII. 
02A0:  BTFSS  F9E.5
02A2:  BRA    02A0
02A4:  MOVF   FAE,W
02A6:  ADDLW  D0
02A8:  MOVWF  08
02AA:  CLRF   09
02AC:  CLRF   0A
02AE:  CLRF   0B
.................... u=getc()-48;//48 corresponde ao valor do caractere 0 da tabela ASCII. 
02B0:  BTFSS  F9E.5
02B2:  BRA    02B0
02B4:  MOVF   FAE,W
02B6:  ADDLW  D0
02B8:  MOVWF  04
02BA:  CLRF   05
02BC:  CLRF   06
02BE:  CLRF   07
.................... null=getc()-48;//descarta caractere nulo/indevido caso seja enviado pela serial 
02C0:  BTFSS  F9E.5
02C2:  BRA    02C0
02C4:  MOVF   FAE,W
02C6:  ADDLW  D0
02C8:  MOVWF  10
02CA:  CLRF   11
02CC:  CLRF   12
02CE:  CLRF   13
.................... selection=(100*c)+(10*d)+u; 
02D0:  CLRF   1F
02D2:  CLRF   1E
02D4:  CLRF   1D
02D6:  MOVLW  64
02D8:  MOVWF  1C
02DA:  MOVFF  0F,23
02DE:  MOVFF  0E,22
02E2:  MOVFF  0D,21
02E6:  MOVFF  0C,20
02EA:  RCALL  00B2
02EC:  MOVFF  03,1B
02F0:  MOVFF  02,1A
02F4:  MOVFF  01,19
02F8:  MOVFF  00,18
02FC:  CLRF   1F
02FE:  CLRF   1E
0300:  CLRF   1D
0302:  MOVLW  0A
0304:  MOVWF  1C
0306:  MOVFF  0B,23
030A:  MOVFF  0A,22
030E:  MOVFF  09,21
0312:  MOVFF  08,20
0316:  RCALL  00B2
0318:  MOVF   00,W
031A:  ADDWF  18,F
031C:  MOVF   01,W
031E:  ADDWFC 19,F
0320:  MOVF   02,W
0322:  ADDWFC 1A,F
0324:  MOVF   03,W
0326:  ADDWFC 1B,F
0328:  MOVF   04,W
032A:  ADDWF  18,W
032C:  MOVWF  14
032E:  MOVF   05,W
0330:  ADDWFC 19,W
0332:  MOVWF  15
0334:  MOVF   06,W
0336:  ADDWFC 1A,W
0338:  MOVWF  16
033A:  MOVF   07,W
033C:  ADDWFC 1B,W
033E:  MOVWF  17
.................... printf("\r\nnumero=%lu\r\n",selection); 
0340:  MOVLW  36
0342:  MOVWF  FF6
0344:  MOVLW  00
0346:  MOVWF  FF7
0348:  MOVLW  09
034A:  MOVWF  18
034C:  BRA    0106
034E:  MOVLW  41
0350:  MOVWF  FE9
0352:  MOVFF  17,1B
0356:  MOVFF  16,1A
035A:  MOVFF  15,19
035E:  MOVFF  14,18
0362:  BRA    01B6
0364:  MOVLW  0D
0366:  BTFSS  F9E.4
0368:  BRA    0366
036A:  MOVWF  FAD
036C:  MOVLW  0A
036E:  BTFSS  F9E.4
0370:  BRA    036E
0372:  MOVWF  FAD
.................... if (selection>100||selection<0) {printf("\r\nValor incorreto!!\r\n");}// faixa de valores aceitáveis 
0374:  MOVF   17,F
0376:  BNZ   038C
0378:  MOVF   16,F
037A:  BNZ   038C
037C:  MOVF   15,F
037E:  BNZ   038C
0380:  MOVF   14,W
0382:  SUBLW  64
0384:  BC    0396
0386:  BRA    038C
0388:  BTFSS  00.0
038A:  BRA    0396
038C:  MOVLW  46
038E:  MOVWF  FF6
0390:  MOVLW  00
0392:  MOVWF  FF7
0394:  RCALL  0090
.................... } while(selection>100||selection<0); 
0396:  MOVF   17,F
0398:  BTFSS  FD8.2
039A:  BRA    0286
039C:  MOVF   16,F
039E:  BTFSS  FD8.2
03A0:  BRA    0286
03A2:  MOVF   15,F
03A4:  BTFSS  FD8.2
03A6:  BRA    0286
03A8:  MOVF   14,W
03AA:  SUBLW  64
03AC:  BC    03B4
03AE:  BRA    0286
03B0:  BTFSC  00.0
03B2:  BRA    0286
.................... //lcd_gotoxy(1,1); 
.................... {printf("\r\nValor ok\r\n");} 
03B4:  MOVLW  5C
03B6:  MOVWF  FF6
03B8:  MOVLW  00
03BA:  MOVWF  FF7
03BC:  RCALL  0090
.................... //printf(lcd_putc,"\fsetpoint %lu",selection); 
.................... delay_ms(200); 
03BE:  MOVLW  C8
03C0:  MOVWF  18
03C2:  RCALL  006A
.................... c=0;d=0;u=0; 
03C4:  CLRF   0F
03C6:  CLRF   0E
03C8:  CLRF   0D
03CA:  CLRF   0C
03CC:  CLRF   0B
03CE:  CLRF   0A
03D0:  CLRF   09
03D2:  CLRF   08
03D4:  CLRF   07
03D6:  CLRF   06
03D8:  CLRF   05
03DA:  CLRF   04
03DC:  BRA    0280
.................... }} 
....................  
03DE:  SLEEP 
....................  

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
