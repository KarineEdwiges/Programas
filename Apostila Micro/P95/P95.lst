CCS PCH C Compiler, Version 5.007, 61971               12-jan-20 00:04

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Micro\Programas oficiais\Apostila Micro\P95\P95.lst

               ROM used:   988 bytes (3%)
                           Largest free fragment is 31780
               RAM used:   28 (1%) at main() level
                           49 (2%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   025A
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
0004:  DATA 0D,0A
0006:  DATA 45,6E
0008:  DATA 76,69
000A:  DATA 65,20
000C:  DATA 75,6D
000E:  DATA 20,76
0010:  DATA 61,6C
0012:  DATA 6F,72
0014:  DATA 20,64
0016:  DATA 65,20
0018:  DATA 73,65
001A:  DATA 74,70
001C:  DATA 6F,69
001E:  DATA 6E,74
0020:  DATA 20,65
0022:  DATA 6E,74
0024:  DATA 72,65
0026:  DATA 20,30
0028:  DATA 20,65
002A:  DATA 20,31
002C:  DATA 30,30
002E:  DATA 3A,0D
0030:  DATA 0A,00
0032:  DATA 0D,0A
0034:  DATA 6E,75
0036:  DATA 6D,65
0038:  DATA 72,6F
003A:  DATA 3D,25
003C:  DATA 6C,75
003E:  DATA 0D,0A
0040:  DATA 00,00
0042:  DATA 0D,0A
0044:  DATA 56,61
0046:  DATA 6C,6F
0048:  DATA 72,20
004A:  DATA 69,6E
004C:  DATA 63,6F
004E:  DATA 72,72
0050:  DATA 65,74
0052:  DATA 6F,21
0054:  DATA 21,0D
0056:  DATA 0A,00
0058:  DATA 0D,0A
005A:  DATA 56,61
005C:  DATA 6C,6F
005E:  DATA 72,20
0060:  DATA 6F,6B
0062:  DATA 0D,0A
0064:  DATA 00,00
*
008C:  TBLRD*+
008E:  MOVF   FF5,F
0090:  BZ    00AC
0092:  MOVFF  FF6,18
0096:  MOVFF  FF7,19
009A:  MOVF   FF5,W
009C:  BTFSS  F9E.4
009E:  BRA    009C
00A0:  MOVWF  FAD
00A2:  MOVFF  18,FF6
00A6:  MOVFF  19,FF7
00AA:  BRA    008C
00AC:  RETURN 0
00AE:  CLRF   24
00B0:  CLRF   25
00B2:  MOVLW  01
00B4:  MOVWF  26
00B6:  CLRF   FDA
00B8:  CLRF   FD9
00BA:  CLRF   29
00BC:  MOVLW  1C
00BE:  MOVWF  28
00C0:  CLRF   FEA
00C2:  MOVLW  20
00C4:  MOVWF  FE9
00C6:  MOVFF  29,FE2
00CA:  MOVFF  28,FE1
00CE:  MOVFF  26,27
00D2:  BCF    FD8.0
00D4:  MOVF   FE5,W
00D6:  MULWF  FEE
00D8:  MOVF   FF3,W
00DA:  ADDWFC 24,F
00DC:  MOVF   FF4,W
00DE:  ADDWFC 25,F
00E0:  DECFSZ 27,F
00E2:  BRA    00D2
00E4:  MOVFF  24,FDE
00E8:  MOVFF  25,24
00EC:  CLRF   25
00EE:  BTFSC  FD8.0
00F0:  INCF   25,F
00F2:  INCF   28,F
00F4:  BTFSC  FD8.2
00F6:  INCF   29,F
00F8:  INCF   26,F
00FA:  MOVF   26,W
00FC:  SUBLW  05
00FE:  BNZ   00C0
0100:  RETURN 0
0102:  TBLRD*+
0104:  MOVFF  FF6,19
0108:  MOVFF  FF7,1A
010C:  MOVF   FF5,W
010E:  BTFSS  F9E.4
0110:  BRA    010E
0112:  MOVWF  FAD
0114:  MOVFF  19,FF6
0118:  MOVFF  1A,FF7
011C:  DECFSZ 18,F
011E:  BRA    0102
0120:  GOTO   034A (RETURN)
0124:  BTFSC  FD8.1
0126:  BRA    012E
0128:  CLRF   FEA
012A:  MOVLW  2C
012C:  MOVWF  FE9
012E:  CLRF   00
0130:  CLRF   01
0132:  CLRF   02
0134:  CLRF   03
0136:  CLRF   2C
0138:  CLRF   2D
013A:  CLRF   2E
013C:  CLRF   2F
013E:  MOVF   2B,W
0140:  IORWF  2A,W
0142:  IORWF  29,W
0144:  IORWF  28,W
0146:  BZ    01A0
0148:  MOVLW  20
014A:  MOVWF  30
014C:  BCF    FD8.0
014E:  RLCF   24,F
0150:  RLCF   25,F
0152:  RLCF   26,F
0154:  RLCF   27,F
0156:  RLCF   2C,F
0158:  RLCF   2D,F
015A:  RLCF   2E,F
015C:  RLCF   2F,F
015E:  MOVF   2B,W
0160:  SUBWF  2F,W
0162:  BNZ   0174
0164:  MOVF   2A,W
0166:  SUBWF  2E,W
0168:  BNZ   0174
016A:  MOVF   29,W
016C:  SUBWF  2D,W
016E:  BNZ   0174
0170:  MOVF   28,W
0172:  SUBWF  2C,W
0174:  BNC   0194
0176:  MOVF   28,W
0178:  SUBWF  2C,F
017A:  MOVF   29,W
017C:  BTFSS  FD8.0
017E:  INCFSZ 29,W
0180:  SUBWF  2D,F
0182:  MOVF   2A,W
0184:  BTFSS  FD8.0
0186:  INCFSZ 2A,W
0188:  SUBWF  2E,F
018A:  MOVF   2B,W
018C:  BTFSS  FD8.0
018E:  INCFSZ 2B,W
0190:  SUBWF  2F,F
0192:  BSF    FD8.0
0194:  RLCF   00,F
0196:  RLCF   01,F
0198:  RLCF   02,F
019A:  RLCF   03,F
019C:  DECFSZ 30,F
019E:  BRA    014C
01A0:  MOVFF  2C,FEF
01A4:  MOVFF  2D,FEC
01A8:  MOVFF  2E,FEC
01AC:  MOVFF  2F,FEC
01B0:  RETURN 0
01B2:  MOVF   FE9,W
01B4:  MOVWF  1C
01B6:  MOVLW  3B
01B8:  MOVWF  23
01BA:  MOVLW  9A
01BC:  MOVWF  22
01BE:  MOVLW  CA
01C0:  MOVWF  21
01C2:  CLRF   20
01C4:  MOVLW  0A
01C6:  MOVWF  1E
01C8:  BSF    FD8.1
01CA:  CLRF   FEA
01CC:  MOVLW  18
01CE:  MOVWF  FE9
01D0:  MOVFF  1B,27
01D4:  MOVFF  1A,26
01D8:  MOVFF  19,25
01DC:  MOVFF  18,24
01E0:  MOVFF  23,2B
01E4:  MOVFF  22,2A
01E8:  MOVFF  21,29
01EC:  MOVFF  20,28
01F0:  RCALL  0124
01F2:  MOVF   01,W
01F4:  MOVF   00,F
01F6:  BNZ   0216
01F8:  MOVF   1E,W
01FA:  XORLW  01
01FC:  BZ    0216
01FE:  MOVF   1C,W
0200:  BZ    0218
0202:  ANDLW  0F
0204:  SUBWF  1E,W
0206:  BZ    020A
0208:  BC    0224
020A:  BTFSC  1C.7
020C:  BRA    0224
020E:  BTFSC  1C.6
0210:  BRA    0218
0212:  MOVLW  20
0214:  BRA    021A
0216:  CLRF   1C
0218:  MOVLW  30
021A:  ADDWF  00,F
021C:  MOVF   00,W
021E:  BTFSS  F9E.4
0220:  BRA    021E
0222:  MOVWF  FAD
0224:  BCF    FD8.1
0226:  MOVFF  23,27
022A:  MOVFF  22,26
022E:  MOVFF  21,25
0232:  MOVFF  20,24
0236:  CLRF   2B
0238:  CLRF   2A
023A:  CLRF   29
023C:  MOVLW  0A
023E:  MOVWF  28
0240:  RCALL  0124
0242:  MOVFF  03,23
0246:  MOVFF  02,22
024A:  MOVFF  01,21
024E:  MOVFF  00,20
0252:  DECFSZ 1E,F
0254:  BRA    01C8
0256:  GOTO   0360 (RETURN)
....................  
.................... #list 
....................  
.................... #fuses HS, CPUDIV1 ,PLL5 ,USBDIV 
.................... #use delay (clock=20000000) 
*
0066:  CLRF   FEA
0068:  MOVLW  18
006A:  MOVWF  FE9
006C:  MOVF   FEF,W
006E:  BZ    008A
0070:  MOVLW  06
0072:  MOVWF  01
0074:  CLRF   00
0076:  DECFSZ 00,F
0078:  BRA    0076
007A:  DECFSZ 01,F
007C:  BRA    0074
007E:  MOVLW  7B
0080:  MOVWF  00
0082:  DECFSZ 00,F
0084:  BRA    0082
0086:  DECFSZ FEF,F
0088:  BRA    0070
008A:  RETURN 0
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7) 
.................... //descomentar linhas comentas abaixo caso seja usado lcd 
.................... //#use standard_io(B) //comentar linha caso a biblioteca do LCD seja diferente 
.................... //#define use_portB_lcd TRUE //comentar linha caso a biblioteca do LCD seja diferente 
.................... //#define LCD_TYPE 2 
.................... //#include <LCD.c> 
....................  
.................... int32 u,d,c,null; 
.................... unsigned int32 selection; 
.................... void main() 
*
025A:  CLRF   FF8
025C:  BCF    FD0.7
025E:  BSF    FB8.3
0260:  MOVLW  08
0262:  MOVWF  FAF
0264:  MOVLW  02
0266:  MOVWF  FB0
0268:  MOVLW  A6
026A:  MOVWF  FAC
026C:  MOVLW  90
026E:  MOVWF  FAB
0270:  MOVF   FC1,W
0272:  ANDLW  C0
0274:  IORLW  0F
0276:  MOVWF  FC1
0278:  MOVLW  07
027A:  MOVWF  FB4
.................... { 
.................... //lcd_init(); 
.................... while(1){ 
.................... //lcd_gotoxy(1,1); 
.................... //printf(lcd_putc," Envio de valor "); 
.................... //lcd_gotoxy(1,2); 
.................... //printf(lcd_putc," pela serial "); 
.................... delay_ms(200); 
027C:  MOVLW  C8
027E:  MOVWF  18
0280:  RCALL  0066
.................... do 
.................... { 
.................... printf("\r\nEnvie um valor de setpoint entre 0 e 100:\r\n"); 
0282:  MOVLW  04
0284:  MOVWF  FF6
0286:  MOVLW  00
0288:  MOVWF  FF7
028A:  RCALL  008C
.................... c=getc()-48; //48 corresponde ao valor do caractere 0 da tabela ASCII. 
028C:  BTFSS  F9E.5
028E:  BRA    028C
0290:  MOVF   FAE,W
0292:  ADDLW  D0
0294:  MOVWF  0C
0296:  CLRF   0D
0298:  CLRF   0E
029A:  CLRF   0F
....................  
.................... d=getc()-48;//48 corresponde ao valor do caractere 0 da tabela ASCII. 
029C:  BTFSS  F9E.5
029E:  BRA    029C
02A0:  MOVF   FAE,W
02A2:  ADDLW  D0
02A4:  MOVWF  08
02A6:  CLRF   09
02A8:  CLRF   0A
02AA:  CLRF   0B
....................  
.................... u=getc()-48;//48 corresponde ao valor do caractere 0 da tabela ASCII. 
02AC:  BTFSS  F9E.5
02AE:  BRA    02AC
02B0:  MOVF   FAE,W
02B2:  ADDLW  D0
02B4:  MOVWF  04
02B6:  CLRF   05
02B8:  CLRF   06
02BA:  CLRF   07
....................  
.................... null=getc()-48;//descarta caractere nulo/indevido caso seja enviado pela comunicação serial 
02BC:  BTFSS  F9E.5
02BE:  BRA    02BC
02C0:  MOVF   FAE,W
02C2:  ADDLW  D0
02C4:  MOVWF  10
02C6:  CLRF   11
02C8:  CLRF   12
02CA:  CLRF   13
....................  
.................... selection=(100*c)+(10*d)+u; 
02CC:  CLRF   1F
02CE:  CLRF   1E
02D0:  CLRF   1D
02D2:  MOVLW  64
02D4:  MOVWF  1C
02D6:  MOVFF  0F,23
02DA:  MOVFF  0E,22
02DE:  MOVFF  0D,21
02E2:  MOVFF  0C,20
02E6:  RCALL  00AE
02E8:  MOVFF  03,1B
02EC:  MOVFF  02,1A
02F0:  MOVFF  01,19
02F4:  MOVFF  00,18
02F8:  CLRF   1F
02FA:  CLRF   1E
02FC:  CLRF   1D
02FE:  MOVLW  0A
0300:  MOVWF  1C
0302:  MOVFF  0B,23
0306:  MOVFF  0A,22
030A:  MOVFF  09,21
030E:  MOVFF  08,20
0312:  RCALL  00AE
0314:  MOVF   00,W
0316:  ADDWF  18,F
0318:  MOVF   01,W
031A:  ADDWFC 19,F
031C:  MOVF   02,W
031E:  ADDWFC 1A,F
0320:  MOVF   03,W
0322:  ADDWFC 1B,F
0324:  MOVF   04,W
0326:  ADDWF  18,W
0328:  MOVWF  14
032A:  MOVF   05,W
032C:  ADDWFC 19,W
032E:  MOVWF  15
0330:  MOVF   06,W
0332:  ADDWFC 1A,W
0334:  MOVWF  16
0336:  MOVF   07,W
0338:  ADDWFC 1B,W
033A:  MOVWF  17
.................... printf("\r\nnumero=%lu\r\n",selection); 
033C:  MOVLW  32
033E:  MOVWF  FF6
0340:  MOVLW  00
0342:  MOVWF  FF7
0344:  MOVLW  09
0346:  MOVWF  18
0348:  BRA    0102
034A:  MOVLW  41
034C:  MOVWF  FE9
034E:  MOVFF  17,1B
0352:  MOVFF  16,1A
0356:  MOVFF  15,19
035A:  MOVFF  14,18
035E:  BRA    01B2
0360:  MOVLW  0D
0362:  BTFSS  F9E.4
0364:  BRA    0362
0366:  MOVWF  FAD
0368:  MOVLW  0A
036A:  BTFSS  F9E.4
036C:  BRA    036A
036E:  MOVWF  FAD
.................... if (selection>100||selection<0) {printf("\r\nValor incorreto!!\r\n");}// faixa de valores aceitáveis 
0370:  MOVF   17,F
0372:  BNZ   0388
0374:  MOVF   16,F
0376:  BNZ   0388
0378:  MOVF   15,F
037A:  BNZ   0388
037C:  MOVF   14,W
037E:  SUBLW  64
0380:  BC    0392
0382:  BRA    0388
0384:  BTFSS  00.0
0386:  BRA    0392
0388:  MOVLW  42
038A:  MOVWF  FF6
038C:  MOVLW  00
038E:  MOVWF  FF7
0390:  RCALL  008C
.................... } while(selection>100||selection<0); 
0392:  MOVF   17,F
0394:  BTFSS  FD8.2
0396:  BRA    0282
0398:  MOVF   16,F
039A:  BTFSS  FD8.2
039C:  BRA    0282
039E:  MOVF   15,F
03A0:  BTFSS  FD8.2
03A2:  BRA    0282
03A4:  MOVF   14,W
03A6:  SUBLW  64
03A8:  BC    03B0
03AA:  BRA    0282
03AC:  BTFSC  00.0
03AE:  BRA    0282
.................... //lcd_gotoxy(1,1); 
.................... {printf("\r\nValor ok\r\n");} 
03B0:  MOVLW  58
03B2:  MOVWF  FF6
03B4:  MOVLW  00
03B6:  MOVWF  FF7
03B8:  RCALL  008C
.................... //printf(lcd_putc,"\fsetpoint %lu",selection); 
.................... delay_ms(200); 
03BA:  MOVLW  C8
03BC:  MOVWF  18
03BE:  RCALL  0066
.................... c=0;d=0;u=0; 
03C0:  CLRF   0F
03C2:  CLRF   0E
03C4:  CLRF   0D
03C6:  CLRF   0C
03C8:  CLRF   0B
03CA:  CLRF   0A
03CC:  CLRF   09
03CE:  CLRF   08
03D0:  CLRF   07
03D2:  CLRF   06
03D4:  CLRF   05
03D6:  CLRF   04
03D8:  BRA    027C
.................... } 
.................... } 
....................  
03DA:  SLEEP 
....................  

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
