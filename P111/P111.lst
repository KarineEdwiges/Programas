CCS PCH C Compiler, Version 5.007, 61971               22-dez-19 21:15

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Microcontroladores e dispositivos periféricos\Programas apostila oficiais\P111\P111.lst

               ROM used:   1798 bytes (5%)
                           Largest free fragment is 30966
               RAM used:   39 (2%) at main() level
                           63 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0630
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #define led1 pin_d1 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
*
00F0:  DATA 20,50
00F2:  DATA 6F,73
00F4:  DATA 69,63
00F6:  DATA 61,6F
00F8:  DATA 20,31
00FA:  DATA 20,20
00FC:  DATA 00,00
00FE:  DATA 20,50
0100:  DATA 6F,73
0102:  DATA 69,63
0104:  DATA 61,6F
0106:  DATA 20,32
0108:  DATA 20,20
010A:  DATA 00,00
010C:  DATA 20,50
010E:  DATA 6F,73
0110:  DATA 69,63
0112:  DATA 61,6F
0114:  DATA 20,33
0116:  DATA 00,00
0118:  DATA 20,50
011A:  DATA 6F,73
011C:  DATA 69,63
011E:  DATA 61,6F
0120:  DATA 20,34
0122:  DATA 20,00
0124:  DATA 20,50
0126:  DATA 6F,73
0128:  DATA 69,63
012A:  DATA 61,6F
012C:  DATA 20,35
012E:  DATA 20,00
0130:  TBLRD*+
0132:  MOVF   FF5,F
0134:  BZ    0150
0136:  MOVFF  FF6,26
013A:  MOVFF  FF7,27
013E:  MOVF   FF5,W
0140:  BTFSS  F9E.4
0142:  BRA    0140
0144:  MOVWF  FAD
0146:  MOVFF  26,FF6
014A:  MOVFF  27,FF7
014E:  BRA    0130
0150:  RETURN 0
0152:  MOVLW  8E
0154:  MOVWF  00
0156:  MOVFF  28,01
015A:  MOVFF  27,02
015E:  CLRF   03
0160:  MOVF   01,F
0162:  BNZ   0176
0164:  MOVFF  02,01
0168:  CLRF   02
016A:  MOVLW  08
016C:  SUBWF  00,F
016E:  MOVF   01,F
0170:  BNZ   0176
0172:  CLRF   00
0174:  BRA    0186
0176:  BCF    FD8.0
0178:  BTFSC  01.7
017A:  BRA    0184
017C:  RLCF   02,F
017E:  RLCF   01,F
0180:  DECF   00,F
0182:  BRA    0176
0184:  BCF    01.7
0186:  GOTO   0570 (RETURN)
018A:  MOVF   27,W
018C:  BTFSC  FD8.2
018E:  BRA    0272
0190:  MOVWF  00
0192:  MOVF   2B,W
0194:  BTFSC  FD8.2
0196:  BRA    0272
0198:  ADDWF  00,F
019A:  BNC   01A4
019C:  MOVLW  81
019E:  ADDWF  00,F
01A0:  BC    0272
01A2:  BRA    01AC
01A4:  MOVLW  7F
01A6:  SUBWF  00,F
01A8:  BNC   0272
01AA:  BZ    0272
01AC:  MOVFF  28,2F
01B0:  MOVF   2C,W
01B2:  XORWF  2F,F
01B4:  BSF    28.7
01B6:  BSF    2C.7
01B8:  MOVF   2A,W
01BA:  MULWF  2E
01BC:  MOVFF  FF4,31
01C0:  MOVF   29,W
01C2:  MULWF  2D
01C4:  MOVFF  FF4,03
01C8:  MOVFF  FF3,30
01CC:  MULWF  2E
01CE:  MOVF   FF3,W
01D0:  ADDWF  31,F
01D2:  MOVF   FF4,W
01D4:  ADDWFC 30,F
01D6:  MOVLW  00
01D8:  ADDWFC 03,F
01DA:  MOVF   2A,W
01DC:  MULWF  2D
01DE:  MOVF   FF3,W
01E0:  ADDWF  31,F
01E2:  MOVF   FF4,W
01E4:  ADDWFC 30,F
01E6:  MOVLW  00
01E8:  CLRF   02
01EA:  ADDWFC 03,F
01EC:  ADDWFC 02,F
01EE:  MOVF   28,W
01F0:  MULWF  2E
01F2:  MOVF   FF3,W
01F4:  ADDWF  30,F
01F6:  MOVF   FF4,W
01F8:  ADDWFC 03,F
01FA:  MOVLW  00
01FC:  ADDWFC 02,F
01FE:  MOVF   28,W
0200:  MULWF  2D
0202:  MOVF   FF3,W
0204:  ADDWF  03,F
0206:  MOVF   FF4,W
0208:  ADDWFC 02,F
020A:  MOVLW  00
020C:  CLRF   01
020E:  ADDWFC 01,F
0210:  MOVF   2A,W
0212:  MULWF  2C
0214:  MOVF   FF3,W
0216:  ADDWF  30,F
0218:  MOVF   FF4,W
021A:  ADDWFC 03,F
021C:  MOVLW  00
021E:  ADDWFC 02,F
0220:  ADDWFC 01,F
0222:  MOVF   29,W
0224:  MULWF  2C
0226:  MOVF   FF3,W
0228:  ADDWF  03,F
022A:  MOVF   FF4,W
022C:  ADDWFC 02,F
022E:  MOVLW  00
0230:  ADDWFC 01,F
0232:  MOVF   28,W
0234:  MULWF  2C
0236:  MOVF   FF3,W
0238:  ADDWF  02,F
023A:  MOVF   FF4,W
023C:  ADDWFC 01,F
023E:  INCF   00,F
0240:  BTFSC  01.7
0242:  BRA    024E
0244:  RLCF   30,F
0246:  RLCF   03,F
0248:  RLCF   02,F
024A:  RLCF   01,F
024C:  DECF   00,F
024E:  MOVLW  00
0250:  BTFSS  30.7
0252:  BRA    0268
0254:  INCF   03,F
0256:  ADDWFC 02,F
0258:  ADDWFC 01,F
025A:  MOVF   01,W
025C:  BNZ   0268
025E:  MOVF   02,W
0260:  BNZ   0268
0262:  MOVF   03,W
0264:  BNZ   0268
0266:  INCF   00,F
0268:  BTFSC  2F.7
026A:  BSF    01.7
026C:  BTFSS  2F.7
026E:  BCF    01.7
0270:  BRA    027A
0272:  CLRF   00
0274:  CLRF   01
0276:  CLRF   02
0278:  CLRF   03
027A:  RETURN 0
027C:  MOVLW  80
027E:  BTFSC  FD8.1
0280:  XORWF  30,F
0282:  CLRF   35
0284:  CLRF   36
0286:  MOVFF  2C,34
028A:  MOVF   30,W
028C:  XORWF  34,F
028E:  MOVF   2B,W
0290:  BTFSC  FD8.2
0292:  BRA    044C
0294:  MOVWF  33
0296:  MOVWF  00
0298:  MOVF   2F,W
029A:  BTFSC  FD8.2
029C:  BRA    045E
029E:  SUBWF  33,F
02A0:  BTFSC  FD8.2
02A2:  BRA    03A6
02A4:  BNC   0320
02A6:  MOVFF  30,39
02AA:  BSF    39.7
02AC:  MOVFF  31,38
02B0:  MOVFF  32,37
02B4:  CLRF   36
02B6:  BCF    FD8.0
02B8:  RRCF   39,F
02BA:  RRCF   38,F
02BC:  RRCF   37,F
02BE:  RRCF   36,F
02C0:  DECFSZ 33,F
02C2:  BRA    02B4
02C4:  BTFSS  34.7
02C6:  BRA    02CE
02C8:  BSF    35.0
02CA:  BRA    0486
02CC:  BCF    35.0
02CE:  BCF    33.0
02D0:  BSF    35.4
02D2:  CLRF   FEA
02D4:  MOVLW  2E
02D6:  MOVWF  FE9
02D8:  BRA    04AC
02DA:  BCF    35.4
02DC:  BTFSC  34.7
02DE:  BRA    02F4
02E0:  BTFSS  33.0
02E2:  BRA    030A
02E4:  RRCF   39,F
02E6:  RRCF   38,F
02E8:  RRCF   37,F
02EA:  RRCF   36,F
02EC:  INCF   00,F
02EE:  BTFSC  FD8.2
02F0:  BRA    047C
02F2:  BRA    030A
02F4:  BTFSC  39.7
02F6:  BRA    0310
02F8:  BCF    FD8.0
02FA:  RLCF   36,F
02FC:  RLCF   37,F
02FE:  RLCF   38,F
0300:  RLCF   39,F
0302:  DECF   00,F
0304:  BTFSC  FD8.2
0306:  BRA    047C
0308:  BRA    02F4
030A:  BSF    35.6
030C:  BRA    03E4
030E:  BCF    35.6
0310:  MOVFF  2C,34
0314:  BTFSS  2C.7
0316:  BRA    031C
0318:  BSF    39.7
031A:  BRA    046E
031C:  BCF    39.7
031E:  BRA    046E
0320:  MOVFF  2F,33
0324:  MOVFF  2F,00
0328:  MOVF   2B,W
032A:  SUBWF  33,F
032C:  MOVFF  2C,39
0330:  BSF    39.7
0332:  MOVFF  2D,38
0336:  MOVFF  2E,37
033A:  CLRF   36
033C:  BCF    FD8.0
033E:  RRCF   39,F
0340:  RRCF   38,F
0342:  RRCF   37,F
0344:  RRCF   36,F
0346:  DECFSZ 33,F
0348:  BRA    033A
034A:  BTFSS  34.7
034C:  BRA    0354
034E:  BSF    35.1
0350:  BRA    0486
0352:  BCF    35.1
0354:  BCF    33.0
0356:  BSF    35.5
0358:  CLRF   FEA
035A:  MOVLW  32
035C:  MOVWF  FE9
035E:  BRA    04AC
0360:  BCF    35.5
0362:  BTFSC  34.7
0364:  BRA    037A
0366:  BTFSS  33.0
0368:  BRA    0390
036A:  RRCF   39,F
036C:  RRCF   38,F
036E:  RRCF   37,F
0370:  RRCF   36,F
0372:  INCF   00,F
0374:  BTFSC  FD8.2
0376:  BRA    047C
0378:  BRA    0390
037A:  BTFSC  39.7
037C:  BRA    0396
037E:  BCF    FD8.0
0380:  RLCF   36,F
0382:  RLCF   37,F
0384:  RLCF   38,F
0386:  RLCF   39,F
0388:  DECF   00,F
038A:  BTFSC  FD8.2
038C:  BRA    047C
038E:  BRA    037A
0390:  BSF    35.7
0392:  BRA    03E4
0394:  BCF    35.7
0396:  MOVFF  30,34
039A:  BTFSS  30.7
039C:  BRA    03A2
039E:  BSF    39.7
03A0:  BRA    046E
03A2:  BCF    39.7
03A4:  BRA    046E
03A6:  MOVFF  30,39
03AA:  BSF    39.7
03AC:  MOVFF  31,38
03B0:  MOVFF  32,37
03B4:  BTFSS  34.7
03B6:  BRA    03C0
03B8:  BCF    39.7
03BA:  BSF    35.2
03BC:  BRA    0486
03BE:  BCF    35.2
03C0:  CLRF   36
03C2:  BCF    33.0
03C4:  CLRF   FEA
03C6:  MOVLW  2E
03C8:  MOVWF  FE9
03CA:  BRA    04AC
03CC:  BTFSC  34.7
03CE:  BRA    0408
03D0:  MOVFF  2C,34
03D4:  BTFSS  33.0
03D6:  BRA    03E4
03D8:  RRCF   39,F
03DA:  RRCF   38,F
03DC:  RRCF   37,F
03DE:  RRCF   36,F
03E0:  INCF   00,F
03E2:  BZ    047C
03E4:  BTFSS  36.7
03E6:  BRA    03FE
03E8:  INCF   37,F
03EA:  BNZ   03FE
03EC:  INCF   38,F
03EE:  BNZ   03FE
03F0:  INCF   39,F
03F2:  BNZ   03FE
03F4:  RRCF   39,F
03F6:  RRCF   38,F
03F8:  RRCF   37,F
03FA:  INCF   00,F
03FC:  BZ    047C
03FE:  BTFSC  35.6
0400:  BRA    030E
0402:  BTFSC  35.7
0404:  BRA    0394
0406:  BRA    0440
0408:  MOVLW  80
040A:  XORWF  39,F
040C:  BTFSS  39.7
040E:  BRA    0418
0410:  BRA    0486
0412:  MOVFF  30,34
0416:  BRA    042C
0418:  MOVFF  2C,34
041C:  MOVF   39,F
041E:  BNZ   042C
0420:  MOVF   38,F
0422:  BNZ   042C
0424:  MOVF   37,F
0426:  BNZ   042C
0428:  CLRF   00
042A:  BRA    046E
042C:  BTFSC  39.7
042E:  BRA    0440
0430:  BCF    FD8.0
0432:  RLCF   36,F
0434:  RLCF   37,F
0436:  RLCF   38,F
0438:  RLCF   39,F
043A:  DECFSZ 00,F
043C:  BRA    042C
043E:  BRA    047C
0440:  BTFSS  34.7
0442:  BRA    0448
0444:  BSF    39.7
0446:  BRA    046E
0448:  BCF    39.7
044A:  BRA    046E
044C:  MOVFF  2F,00
0450:  MOVFF  30,39
0454:  MOVFF  31,38
0458:  MOVFF  32,37
045C:  BRA    046E
045E:  MOVFF  2B,00
0462:  MOVFF  2C,39
0466:  MOVFF  2D,38
046A:  MOVFF  2E,37
046E:  MOVFF  39,01
0472:  MOVFF  38,02
0476:  MOVFF  37,03
047A:  BRA    04E4
047C:  CLRF   00
047E:  CLRF   01
0480:  CLRF   02
0482:  CLRF   03
0484:  BRA    04E4
0486:  CLRF   36
0488:  COMF   37,F
048A:  COMF   38,F
048C:  COMF   39,F
048E:  COMF   36,F
0490:  INCF   36,F
0492:  BNZ   049E
0494:  INCF   37,F
0496:  BNZ   049E
0498:  INCF   38,F
049A:  BNZ   049E
049C:  INCF   39,F
049E:  BTFSC  35.0
04A0:  BRA    02CC
04A2:  BTFSC  35.1
04A4:  BRA    0352
04A6:  BTFSC  35.2
04A8:  BRA    03BE
04AA:  BRA    0412
04AC:  MOVF   FEF,W
04AE:  ADDWF  37,F
04B0:  BNC   04BC
04B2:  INCF   38,F
04B4:  BNZ   04BC
04B6:  INCF   39,F
04B8:  BTFSC  FD8.2
04BA:  BSF    33.0
04BC:  MOVF   FED,F
04BE:  MOVF   FEF,W
04C0:  ADDWF  38,F
04C2:  BNC   04CA
04C4:  INCF   39,F
04C6:  BTFSC  FD8.2
04C8:  BSF    33.0
04CA:  MOVF   FED,F
04CC:  MOVF   FEF,W
04CE:  BTFSC  FEF.7
04D0:  BRA    04D4
04D2:  XORLW  80
04D4:  ADDWF  39,F
04D6:  BTFSC  FD8.0
04D8:  BSF    33.0
04DA:  BTFSC  35.4
04DC:  BRA    02DA
04DE:  BTFSC  35.5
04E0:  BRA    0360
04E2:  BRA    03CC
04E4:  GOTO   05F2 (RETURN)
04E8:  MOVLW  8E
04EA:  MOVWF  00
04EC:  MOVF   27,W
04EE:  SUBWF  00,F
04F0:  MOVFF  28,02
04F4:  MOVFF  29,01
04F8:  BSF    02.7
04FA:  MOVF   00,F
04FC:  BZ    0510
04FE:  BCF    FD8.0
0500:  MOVF   02,F
0502:  BNZ   0508
0504:  MOVF   01,F
0506:  BZ    0510
0508:  RRCF   02,F
050A:  RRCF   01,F
050C:  DECFSZ 00,F
050E:  BRA    04FE
0510:  BTFSS  28.7
0512:  BRA    051E
0514:  COMF   01,F
0516:  COMF   02,F
0518:  INCF   01,F
051A:  BTFSC  FD8.2
051C:  INCF   02,F
051E:  GOTO   0604 (RETURN)
....................  
.................... #list 
....................  
.................... #fuses HS,CPUDIV1,PLL5,USBDIV  //Configuração dos fusíveis 
.................... #use delay(clock=20000000) 
0522:  MOVLW  03
0524:  SUBWF  28,F
0526:  BNC   053A
0528:  CLRF   FEA
052A:  MOVLW  28
052C:  MOVWF  FE9
052E:  MOVF   FEF,W
0530:  BZ    053A
0532:  BRA    0536
0534:  BRA    0536
0536:  DECFSZ FEF,F
0538:  BRA    0534
053A:  RETURN 0
053C:  CLRF   FEA
053E:  MOVLW  27
0540:  MOVWF  FE9
0542:  MOVF   FEF,W
0544:  BZ    0560
0546:  MOVLW  06
0548:  MOVWF  01
054A:  CLRF   00
054C:  DECFSZ 00,F
054E:  BRA    054C
0550:  DECFSZ 01,F
0552:  BRA    054A
0554:  MOVLW  7B
0556:  MOVWF  00
0558:  DECFSZ 00,F
055A:  BRA    0558
055C:  DECFSZ FEF,F
055E:  BRA    0546
0560:  GOTO   062E (RETURN)
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... const int16 pos_min=500, pos_max=2400 ;  //Valores de ajuste do servo 
.................... const int32 tm=3036; 
.................... long int  angulo=0,tempo2; 
.................... float tempo; 
.................... int selecao; 
.................... int  estado_anterior,n; 
.................... #int_timer1 
.................... void funcao_tempo() 
.................... {static boolean led;static unsigned int32 n;set_timer1(tm+get_timer1()); 
*
0096:  MOVF   FCE,W
0098:  MOVFF  FCF,03
009C:  ADDLW  DC
009E:  MOVWF  3B
00A0:  MOVLW  0B
00A2:  ADDWFC FCF,W
00A4:  CLRF   3D
00A6:  BCF    FD8.2
00A8:  BTFSC  FD8.0
00AA:  INCF   3D,F
00AC:  MOVWF  FCF
00AE:  MOVFF  3B,FCE
.................... n++; 
00B2:  MOVLW  01
00B4:  ADDWF  22,F
00B6:  BTFSC  FD8.0
00B8:  INCF   23,F
00BA:  BTFSC  FD8.2
00BC:  INCF   24,F
00BE:  BTFSC  FD8.2
00C0:  INCF   25,F
.................... if (n==5) 
00C2:  MOVF   22,W
00C4:  SUBLW  05
00C6:  BNZ   00EA
00C8:  MOVF   23,F
00CA:  BNZ   00EA
00CC:  MOVF   24,F
00CE:  BNZ   00EA
00D0:  MOVF   25,F
00D2:  BNZ   00EA
*
00EA:  BCF    F9E.0
00EC:  GOTO   0054
.................... {n=0;led=!led;output_bit(led1,led);}} 
*
00D4:  CLRF   25
00D6:  CLRF   24
00D8:  CLRF   23
00DA:  CLRF   22
00DC:  BTG    21.0
00DE:  BTFSC  21.0
00E0:  BRA    00E6
00E2:  BCF    F8C.1
00E4:  BRA    00E8
00E6:  BSF    F8C.1
00E8:  BCF    F95.1
.................... servo ( int angulo) 
.................... {         output_high(pin_d7); 
*
0564:  BCF    F95.7
0566:  BSF    F8C.7
....................          tempo=(angulo* 0.00555555555);//converte para % em float 
0568:  CLRF   28
056A:  MOVFF  26,27
056E:  BRA    0152
0570:  MOVFF  03,2A
0574:  MOVFF  02,29
0578:  MOVFF  01,28
057C:  MOVFF  00,27
0580:  MOVLW  61
0582:  MOVWF  2E
0584:  MOVLW  0B
0586:  MOVWF  2D
0588:  MOVLW  36
058A:  MOVWF  2C
058C:  MOVLW  77
058E:  MOVWF  2B
0590:  RCALL  018A
0592:  MOVFF  03,1D
0596:  MOVFF  02,1C
059A:  MOVFF  01,1B
059E:  MOVFF  00,1A
....................          tempo2=(tempo*(pos_max-pos_min)) + pos_min; //converte para tempo 
05A2:  MOVFF  1D,2A
05A6:  MOVFF  1C,29
05AA:  MOVFF  1B,28
05AE:  MOVFF  1A,27
05B2:  CLRF   2E
05B4:  MOVLW  80
05B6:  MOVWF  2D
05B8:  MOVLW  6D
05BA:  MOVWF  2C
05BC:  MOVLW  89
05BE:  MOVWF  2B
05C0:  RCALL  018A
05C2:  MOVFF  03,2A
05C6:  MOVFF  02,29
05CA:  MOVFF  01,28
05CE:  MOVFF  00,27
05D2:  BCF    FD8.1
05D4:  MOVFF  03,2E
05D8:  MOVFF  02,2D
05DC:  MOVFF  01,2C
05E0:  MOVFF  00,2B
05E4:  CLRF   32
05E6:  CLRF   31
05E8:  MOVLW  7A
05EA:  MOVWF  30
05EC:  MOVLW  87
05EE:  MOVWF  2F
05F0:  BRA    027C
05F2:  MOVFF  03,2A
05F6:  MOVFF  02,29
05FA:  MOVFF  01,28
05FE:  MOVFF  00,27
0602:  BRA    04E8
0604:  MOVFF  02,19
0608:  MOVFF  01,18
....................          delay_us(tempo2); 
060C:  MOVFF  19,27
0610:  INCF   27,F
0612:  DECF   27,F
0614:  BTFSC  FD8.2
0616:  BRA    061E
0618:  SETF   28
061A:  RCALL  0522
061C:  BRA    0612
061E:  MOVFF  18,28
0622:  RCALL  0522
....................          output_low (pin_d7); 
0624:  BCF    F95.7
0626:  BCF    F8C.7
....................          delay_ms(20); } 
0628:  MOVLW  14
062A:  MOVWF  27
062C:  BRA    053C
062E:  RETURN 0
.................... void main() 
0630:  CLRF   FF8
0632:  BCF    FD0.7
0634:  BSF    07.7
0636:  BSF    FB8.3
0638:  MOVLW  08
063A:  MOVWF  FAF
063C:  MOVLW  02
063E:  MOVWF  FB0
0640:  MOVLW  A6
0642:  MOVWF  FAC
0644:  MOVLW  90
0646:  MOVWF  FAB
0648:  CLRF   17
064A:  CLRF   16
064C:  MOVF   FC1,W
064E:  ANDLW  C0
0650:  IORLW  0F
0652:  MOVWF  FC1
0654:  MOVLW  07
0656:  MOVWF  FB4
0658:  BCF    21.0
065A:  BCF    21.0
065C:  CLRF   22
065E:  CLRF   23
0660:  CLRF   24
0662:  CLRF   25
.................... { port_b_pullups(TRUE); 
0664:  BCF    FF1.7
.................... enable_interrupts(GLOBAL); 
0666:  MOVLW  C0
0668:  IORWF  FF2,F
.................... enable_interrupts(INT_timer1); 
066A:  BSF    F9D.0
.................... setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
066C:  MOVLW  B5
066E:  MOVWF  FCD
.................... set_timer1(tm);   
0670:  MOVLW  0B
0672:  MOVWF  FCF
0674:  MOVLW  DC
0676:  MOVWF  FCE
.................... while(true) 
.................... {if (input(pin_b0)==0) 
0678:  BSF    F93.0
067A:  BTFSC  F81.0
067C:  BRA    0682
.................... {estado_anterior=1;} 
067E:  MOVLW  01
0680:  MOVWF  1F
.................... if((input(pin_b0)==1)&&(estado_anterior==1)) 
0682:  BSF    F93.0
0684:  BTFSS  F81.0
0686:  BRA    069C
0688:  DECFSZ 1F,W
068A:  BRA    069C
.................... {estado_anterior=0;selecao=selecao+1;if (selecao>5) selecao=1;} 
068C:  CLRF   1F
068E:  MOVLW  01
0690:  ADDWF  1E,F
0692:  MOVF   1E,W
0694:  SUBLW  05
0696:  BC    069C
0698:  MOVLW  01
069A:  MOVWF  1E
.................... if (selecao==1) 
069C:  DECFSZ 1E,W
069E:  BRA    06AE
....................          { printf(" Posicao 1  "); servo(0); } 
06A0:  MOVLW  F0
06A2:  MOVWF  FF6
06A4:  MOVLW  00
06A6:  MOVWF  FF7
06A8:  RCALL  0130
06AA:  CLRF   26
06AC:  RCALL  0564
....................   if (selecao==2) 
06AE:  MOVF   1E,W
06B0:  SUBLW  02
06B2:  BNZ   06C4
....................         { printf(" Posicao 2  "); servo(45); } 
06B4:  MOVLW  FE
06B6:  MOVWF  FF6
06B8:  MOVLW  00
06BA:  MOVWF  FF7
06BC:  RCALL  0130
06BE:  MOVLW  2D
06C0:  MOVWF  26
06C2:  RCALL  0564
....................   if (selecao==3) 
06C4:  MOVF   1E,W
06C6:  SUBLW  03
06C8:  BNZ   06DA
....................        { printf(" Posicao 3"); servo(90); } 
06CA:  MOVLW  0C
06CC:  MOVWF  FF6
06CE:  MOVLW  01
06D0:  MOVWF  FF7
06D2:  RCALL  0130
06D4:  MOVLW  5A
06D6:  MOVWF  26
06D8:  RCALL  0564
....................   if (selecao==4) 
06DA:  MOVF   1E,W
06DC:  SUBLW  04
06DE:  BNZ   06F0
....................          { printf(" Posicao 4 "); servo(135);}                   
06E0:  MOVLW  18
06E2:  MOVWF  FF6
06E4:  MOVLW  01
06E6:  MOVWF  FF7
06E8:  RCALL  0130
06EA:  MOVLW  87
06EC:  MOVWF  26
06EE:  RCALL  0564
....................   if (selecao==5) 
06F0:  MOVF   1E,W
06F2:  SUBLW  05
06F4:  BNZ   0706
....................        { printf(" Posicao 5 "); servo(180);}}} 
06F6:  MOVLW  24
06F8:  MOVWF  FF6
06FA:  MOVLW  01
06FC:  MOVWF  FF7
06FE:  RCALL  0130
0700:  MOVLW  B4
0702:  MOVWF  26
0704:  RCALL  0564
0706:  BRA    0678
....................  
0708:  SLEEP 

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
